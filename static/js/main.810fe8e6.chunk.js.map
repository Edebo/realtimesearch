{"version":3,"sources":["component/SearchBox.js","component/Movie.js","component/MovieList.js","component/App.js","index.js"],"names":["SearchBox","_ref","year","_ref$textChange","textChange","f","_ref$yearChange","yearChange","react_default","a","createElement","type","onKeyPress","e","build","defaultValue","start","end","reverse","required","value","onChange","id","name","classes","optionClasses","Movie","title","className","MovieList","_ref$movies","movies","map","movie","i","component_Movie","Object","assign","key","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","which","search","target","substr","toLowerCase","filteredMovies","state","filter","indexOf","setState","console","log","yearnum","loading","bind","assertThisInitialized","fetch","res","json","data","class","component_SearchBox","component_MovieList","Component","ReactDOM","render","src_component_App","document","getElementById"],"mappings":"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","file":"static/js/main.810fe8e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { YearPicker} from 'react-dropdown-date';\r\n\r\nconst SearchBox=({year,textChange=f=>f,yearChange=f=>f})=>\r\n    <div>\r\n        <input  type='text' onKeyPress={(e)=>textChange(e)}/>\r\n        <YearPicker\r\n                    defaultValue={'select year'}\r\n                    // default is 1900\r\n                    start={1900}\r\n                    // default is current year\r\n                    end={2018}\r\n                    // default is ASCENDING\r\n                    reverse\r\n                    // default is false\r\n                    required={true}\r\n                    \r\n                    // mandatory\r\n                    value={year}\r\n                    // mandatory\r\n                    onChange={(year)=>{yearChange(year)}}\r\n                    id={'year'}\r\n                    name={'year'}\r\n                    classes={'classes'}\r\n                    optionClasses={'option classes'}\r\n                />\r\n    </div>\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Movie=({title,year})=>\r\n        <div className=\"container\">\r\n                <p>{title}</p>\r\n                <p>{year}</p>        \r\n        </div>\r\n        \r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js'\r\nconst MovieList=({movies=[]})=>\r\n   \r\n        <div>\r\n            <div id='header' className=\"container\">\r\n                <p>Movie</p>\r\n                <p>Year</p>\r\n            </div>\r\n            <div className=\"list\">\r\n    \r\n                { \r\n                     movies.map((movie,i)=><Movie key={i} {...movie}/>)\r\n                }\r\n            </div>    \r\n        </div>\r\n\r\n\r\n\r\nexport default MovieList;","import React, { Component } from 'react';\nimport SearchBox from './SearchBox';\nimport MovieList from './MovieList';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state={\n      loading:true,\n      year:'',\n      movies:null, \n      filteredMovies:null    \n      }     \n      this.textChange=this.textChange.bind(this)\n      this.yearChange=this.yearChange.bind(this)\n  }\n \n async componentDidMount(){\n  const url='https://raw.githubusercontent.com/prust/wikipedia-movie-data/master/movies.json'\n  const res=await fetch(url);\n  const data=await res.json(); \n  console.log(data);\n this.setState({movies:data,filteredMovies:data,loading:false});\n}\n\ntextChange=(e)=>{\nif(e.which===13){\n  const search=e.target.value.substr(0,20).toLowerCase();\n  const filteredMovies=this.state.movies.filter(movie=>{\n    return movie.title.toLowerCase().indexOf(search)!==-1;   \n  })\n\n  this.setState({filteredMovies})\n  console.log('i got here')\n}\n}\n\nyearChange=(year)=>{\n  const yearnum=~~year //year is in string while movie.year is in number.hencethe need for conversion from string to number so as to be able to compare\n  const filteredMovies=this.state.movies.filter(movie=>(movie.year===yearnum))  \n  this.setState({year,filteredMovies});\n  console.log('i got here')\n}\n\n  render() {   \nconst {textChange,yearChange}=this\n\n    if(this.state.loading){\n      return (\n        <div class=\"con\">\n            <div class=\"dash uno\"></div>\n            <div class=\"dash dos\"></div>\n            <div class=\"dash tres\"></div>\n            <div class=\"dash cuatro\"></div>\n        </div>\n      );\n    }\n\n    if(!this.state.movies){\n      return <div>cannot load data</div>\n    }\n   \n    \n    \n    return (   \n      <div className=\"App\">                   \n              <div>\n                <SearchBox className=\"search\" year={this.state.year} textChange={textChange} yearChange={yearChange}/>\n                <MovieList className=\"Movies\" movies={this.state.filteredMovies}/>\n              </div>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}